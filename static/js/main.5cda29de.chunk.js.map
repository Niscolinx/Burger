{"version":3,"sources":["assets/images/burger-logo.png","components/hoc/HigherOrder.js","components/Layout/Logo.js","components/Layout/Navigation/NavigationItem.js","components/Layout/Navigation/NavigationItems.js","components/Layout/Navigation/SideDrawerToggle.js","components/Layout/Toolbar.js","components/Modal/Backdrop.js","components/Layout/Navigation/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControl/BuildControl.js","components/Burger/BuildControl/BuildControls.js","components/Modal/Modal.js","components/hoc/withErrorHandler.js","axios.js","components/Layout/spinner.js","components/Modal/Button.js","components/Modal/OrderSummary.js","containers/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Layout/CheckoutSummary.js","components/Layout/Input.js","containers/ContactData.js","containers/Checkout.js","components/Layout/Order.js","containers/Orders.js","containers/Auth.js","store/actions/Auth.js","containers/App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","__webpack_require__","p","Aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","activeClassName","exact","navigation","NavigationItem","drawerToggle","onClick","clicked","toolbar","SideDrawerToggle","openSideDrawer","Logo","NavigationItems","backdrop","orderSummary","sideDrawer","assigned","open","HigherOrder","Backdrop","closed","join","Layout","state","sideDrawerShow","sideDrawerHide","_this","setState","switchSideDrawerHandler","prevState","Toolbar","this","SideDrawer","Component","BurgerIngredient","ingredient","type","burger","transformedIng","Object","keys","ingredients","map","igkey","toConsumableArray","Array","_","i","BurgerIngredients_BurgerIngredient","key","reduce","arr","ig","concat","length","buildControl","label","remove","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl","addIngredient","removeIngredient","purchasable","summary","Modal","nextProps","transform","opacity","withErrorHandler","WrappedComponent","axios","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","handleError","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","components_Modal_Modal","message","instance","create","baseURL","spinner","button","btnType","Button","cancelled","continue","BurgerBuilder","orderCancel","orderContinue","onOrderRedirect","history","push","orderbtn","newIng","values","orderIng","el","onInitIngredients","ingDisabled","objectSpread","ing","totalSummary","textAlign","fontSize","Layout_spinner","Burger","BuildControls","onAddIngredient","onRemoveIngredient","totalPrice","OrderSummary","connect","dispatch","ingName","ingredientName","get","then","data","catch","CheckoutSummary","parseFloat","cancelCheckout","continued","input","inputElement","validateClass","validate","isTouched","inputtype","assign","config","onChange","changed","options","option","displayValue","ContactData","orderForm","name","elementType","placeholder","validation","required","valid","zipcode","minLength","maxLength","street","country","email","deliveryMethod","loading","nameHandler","e","id","updatedOrderForm","updatedKeys","target","checkValidity","orderedBurger","preventDefault","orderData","formValue","contactform","onInitBurgerStart","buttonProps","disabledArr","buttonKeys","ifValid","rules","isValid","trim","elementTypeArr","form","Input","order","post","orderId","orderBurgerFailed","orderAction","Checkout","goBack","replace","Summary","react_router","orderRedirect","purchased","Layout_CheckoutSummary","path","match","url","component","Order","amount","ingredientArr","fontWeight","Orders","onInitFetchedOrders","onDeleteAllOrders","Layout_Order","onDeleteOrder","fetchedOrders","orders","err","fetchedOrdersFailed","actions","Auth","control","password","regControl","isLogin","defineProperty","loginButton","onInitAuth","toggleLogin","console","log","onSubmit","auth","info","returnSecureToken","payload","App","components_Layout_Layout","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","reducer","undefined","action","orderReducer","newOrder","reverse","updateOrders","filter","update","tokenId","userId","authState","authSuccess","authFailed","rootReducer","burgerBuilder","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","app","es","containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cda29de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Aux = (props) => {\r\n  return  props.children\r\n};\r\n\r\nexport default Aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\n\r\nconst logo = (props) => (\r\n    <div className='logo' style={{ height: props.height }}>\r\n        <img src={burgerLogo} alt='burger-logo' />\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className = 'navigationItem'>\r\n    <NavLink\r\n     to = {props.link}\r\n    activeClassName = 'active'\r\n    className = 'navLink'\r\n    exact = {props.exact}> {props.children}</NavLink>\r\n    </li>\r\n\r\n);\r\n\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem'\r\n\r\nconst navigation = () => (\r\n    <ul className='navigationItems'>\r\n\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/Checkout/checkout-data\">Checkout</NavigationItem>\r\n        <NavigationItem link=\"/Orders\">Orders</NavigationItem>\r\n        <NavigationItem link='/Auth/login'>Login</NavigationItem>\r\n    </ul>\r\n)\r\n\r\nexport default navigation;","import React from 'react';\r\n\r\nconst drawerToggle = (props) =>(\r\n    <div onClick = {props.clicked} className = 'DrawerToggle'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport Logo from './Logo'\r\nimport NavigationItems from './Navigation/NavigationItems'\r\nimport SideDrawerToggle from './Navigation/SideDrawerToggle';\r\n\r\nconst toolbar = (props)=>(\r\n    <div className = 'toolbar'>\r\n        <SideDrawerToggle clicked = {props.openSideDrawer}/>\r\n        <Logo/>\r\n        <div>\r\n            <nav className = 'desktopOnly'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nconst backdrop = (props) => (\r\n    props.orderSummary? <div className = 'backdrop' onClick = {props.clicked}></div>: null\r\n)\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../Logo';\r\nimport NavigationItems from './NavigationItems';\r\nimport Backdrop from '../../Modal/Backdrop';\r\nimport Aux from '../../hoc/HigherOrder';\r\n\r\nconst sideDrawer = (props) => {\r\n    let assigned = ['sideDrawer', 'close'];\r\n    if(props.open){\r\n        assigned = ['sideDrawer', 'open']\r\n    }\r\n\r\n\r\n    return(\r\n        <Aux>\r\n        <Backdrop orderSummary = {props.open}\r\n                clicked = {props.closed}\r\n        />\r\n        <div className = {assigned.join(' ')}>\r\n        <Logo height = \"30px\"/>\r\n        <nav>\r\n            <NavigationItems/>\r\n        </nav>\r\n\r\n        </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../hoc/HigherOrder';\r\nimport Toolbar from './Toolbar';\r\nimport SideDrawer from './Navigation/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        sideDrawerShow:false,\r\n    }\r\n\r\n    sideDrawerHide = () => {\r\n        this.setState({\r\n            sideDrawerShow:false\r\n        })\r\n    }\r\n\r\n    switchSideDrawerHandler = () =>{\r\n        this.setState((prevState) =>{\r\n           return { sideDrawerShow: !prevState.sideDrawerShow}\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n            <Toolbar openSideDrawer = {this.switchSideDrawerHandler}/>\r\n            <SideDrawer closed = {this.sideDrawerHide} \r\n                open = {this.state.sideDrawerShow}\r\n            />\r\n            <main className = 'content'>\r\n                {this.props.children}\r\n            </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n\r\n        let ingredient = null;\r\n    \r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className = 'BreadBottom'></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = <div className = 'BreadTop'>\r\n                    <div className = 'seeds1'></div>\r\n                    <div className = 'seeds2'></div>\r\n                </div>\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className = 'Meat'></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className = 'Cheese'></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className = 'Salad'></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className = 'Bacon'></div>\r\n                break;\r\n        \r\n            default:\r\n                ingredient = null\r\n                break;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIng = Object.keys(props.ingredients).map(igkey => {\r\n        return  [...Array(props.ingredients[igkey])].map((_, i) => {\r\n             return   <BurgerIngredient type = {igkey} key = {igkey + i}/>\r\n            });\r\n        })\r\n        \r\n        .reduce((arr,ig) =>{\r\n            return( arr.concat(ig))\r\n        }, []);\r\n\r\n     if(transformedIng.length === 0){\r\n         transformedIng = <p>Please add an ingredient</p>\r\n     };\r\n\r\n    return (\r\n    <div className = 'burger'>\r\n        <BurgerIngredient type = 'bread-top'/>\r\n        {transformedIng}\r\n        <BurgerIngredient type = 'bread-bottom'/>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nconst buildControl = (props) => (\r\n    <div className = 'BuildControl'>\r\n    <div className = 'Label'>{props.label}</div>\r\n    <button className = 'Less' onClick = {props.remove} disabled = {props.disabled}>Less</button>\r\n    <button className = 'More' onClick = {props.added}>More</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    \r\n        <div className = 'BuildControls'>\r\n             <h3>The price is ${props.price.toFixed(2)}</h3> \r\n        {controls.map(ctrl => {\r\n            return <BuildControl\r\n             key = {ctrl.label}\r\n             label = {ctrl.label}\r\n             added = {() => props.addIngredient(ctrl.type)}\r\n             remove = {() => props.removeIngredient(ctrl.type)}\r\n             disabled = {props.disabled[ctrl.type]}\r\n             />\r\n        })}\r\n        <div className = 'btn-order'>\r\n        <button\r\n         disabled = {!props.purchasable}\r\n         onClick = {props.summary}>\r\n         order now</button>\r\n        </div>\r\n        </div>\r\n    \r\n)\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport Aux from '../hoc/HigherOrder';\r\nimport Backdrop from '../../components/Modal/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return nextProps.orderSummary !== this.props.orderSummary || nextProps.children !== this.props.children\r\n    } \r\n\r\n    render(){\r\n        return(\r\n    <Aux>\r\n    <Backdrop \r\n    orderSummary = {this.props.orderSummary}\r\n    clicked = {this.props.clicked}></Backdrop>\r\n    <div className = 'Modal'\r\n    style = {{\r\n        transform: this.props.orderSummary? 'translateY(-20vh)': 'translateY(-100vh)',\r\n        opacity: this.props.orderSummary? '1': '0'\r\n    }}>\r\n    {this.props.children}\r\n    </div>\r\n    </Aux>\r\n        )\r\n    }\r\n}\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Modal from '../Modal/Modal'\r\nimport Aux from './HigherOrder'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n        state = {\r\n            error:null\r\n        }\r\n\r\n        componentWillMount(){\r\n           this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null})\r\n                return req\r\n            })\r\n           this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error:error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        handleError = () => {\r\n            this.setState({error: null})\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                <Modal orderSummary = {this.state.error} clicked = {this.handleError}>\r\n                    {this.state.error ? this.state.error.message:null}\r\n                </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n            </Aux>\r\n                )\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://my-react-burger-1ce01.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nconst spinner = () => (\r\n <div className=\"lds-dual-ring\"></div>\r\n)\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nconst button = (props) => (\r\n    <button className = {['orderbutton', props.btnType].join(' ')}\r\n    onClick = {props.clicked}>\r\n        {props.children}\r\n    </button>\r\n)\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from './Button';\r\nimport Aux from '../hoc/HigherOrder';\r\n\r\nconst orderSummary = (props) => {\r\n    const orderSummary = Object.keys(props.ingredients).map((igkey, i) => {\r\n        return <li key = {i}><strong>{igkey}</strong>: {props.ingredients[igkey]}</li>\r\n        })\r\n        return <Aux>\r\n\r\n        <h3>YOUR ORDER</h3>\r\n        <h3>A delicious burger with the following ingredients:</h3>\r\n        <ul>\r\n            {orderSummary}\r\n        </ul>\r\n        <strong>The total price is: ${props.price.toFixed(2)}</strong>\r\n        <h3>Continue to checkout?</h3>\r\n        <Button btnType = 'Danger' clicked = {props.cancelled}>cancel</Button>\r\n        <Button btnType = 'Success' clicked = {props.continue}>checkout</Button>\r\n        </Aux>\r\n}\r\n\r\nexport default orderSummary;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport Burger from '../components/Burger/Burger'\r\nimport BuildControls from \"../components/Burger/BuildControl/BuildControls\"\r\nimport Modal from \"../components/Modal/Modal\"\r\nimport Aux from \"../components/hoc/HigherOrder\"\r\nimport withErrorHandler from \"../components/hoc/withErrorHandler\"\r\nimport axios from \"../axios\"\r\nimport Spinner from \"../components/Layout/spinner\"\r\nimport OrderSummary from \"../components/Modal/OrderSummary\"\r\nimport * as actions from '../store/actions/burgerIndex'\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    orderSummary: false,\r\n  };\r\n\r\n  orderSummary = () => {\r\n    this.setState({\r\n      orderSummary: true\r\n    });\r\n  };\r\n\r\n  orderCancel = () => {\r\n    this.setState({\r\n      orderSummary: false\r\n    });\r\n  };\r\n\r\n  orderContinue = () => {\r\n    this.props.onOrderRedirect()\r\n    this.props.history.push('/Checkout');\r\n  }\r\n  componentDidMount() {\r\n    this.props.onInitIngredients()\r\n  };\r\n\r\n  orderbtn = newIng => {\r\n\r\n    const orderIng = Object.values(newIng).reduce((orderIng, el) => {\r\n      return orderIng + el;\r\n    }, 0);\r\n\r\n\r\n    return orderIng > 0\r\n  };\r\n\r\n\r\n  render() {\r\n    let ingDisabled = { ...this.props.ingredients };\r\n    for (let ing in ingDisabled) {\r\n      ingDisabled[ing] = ingDisabled[ing] <= 0;\r\n    }\r\n    let totalSummary = null;\r\n\r\n    let burger = this.props.error ? (\r\n      <p style={{\r\n        textAlign: 'center',\r\n        fontSize: '1.4rem'\r\n      }}>Ingredients can't be loaded. Please check your internet connection</p>\r\n    ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <Aux>\r\n          <Burger ingredients={this.props.ingredients} />\r\n          <BuildControls\r\n            disabled={ingDisabled}\r\n            summary={this.orderSummary}\r\n            purchasable={this.orderbtn(this.props.ingredients)}\r\n            addIngredient={this.props.onAddIngredient}\r\n            removeIngredient={this.props.onRemoveIngredient}\r\n            price={this.props.totalPrice}\r\n          />\r\n          ;\r\n        </Aux>\r\n      );\r\n      totalSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingredients}\r\n          orderSummary={this.state.orderSummary}\r\n          cancelled={this.orderCancel}\r\n          continue={this.orderContinue}\r\n          price={this.props.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          orderSummary={this.state.orderSummary}\r\n          clicked={this.orderCancel}>\r\n\r\n          {totalSummary}\r\n        </Modal>\r\n        {burger}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burger.ingredients,\r\n    totalPrice: state.burger.totalPrice,\r\n    error: state.burger.error\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddIngredient: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onRemoveIngredient: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.setIngredients()),\r\n    onOrderRedirect: () => dispatch(actions.orderRedirect())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const initIngredients = (ing) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ing\r\n    }\r\n}\r\nexport const loadIngFailed = () => {\r\n    return {\r\n        type: actionTypes.LOAD_INGREDIENTS_FAILED\r\n    }\r\n}\r\nexport const setIngredients = () => {\r\n    return dispatch => {\r\n        axios\r\n            .get(\"https://my-react-burger-1ce01.firebaseio.com/ingredients.json\")\r\n            .then(res => {\r\n                dispatch(initIngredients(res.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(loadIngFailed())\r\n            })\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const LOAD_INGREDIENTS_FAILED = 'LOAD_INGREDIENTS_FAILED'\r\n\r\nexport const BURGER_ORDER_START = 'BURGER_ORDER_START'\r\nexport const BURGER_ORDER_FAILED = 'BURGER_ORDER_FAILED'\r\nexport const BURGER_ORDER_SUCCESS = 'BURGER_ORDER_SUCESS'\r\nexport const ORDER_REDIRECT = 'ORDER_REDIRECT'\r\n\r\nexport const FETCHED_ORDERS_DELETE = 'FETCHED_ORDERS_DELETE'\r\nexport const FETCHED_ORDERS_START = 'FETCHED_ORDERS_START'\r\nexport const FETCHED_ORDERS_SUCCESS = 'FETCHED_ORDERS_SUCCESS'\r\nexport const FETCHED_ORDERS_FAILED = 'FETCHED_ORDERS_FAILED'\r\nexport const DELELTE_ALL_ORDERS = 'DELELTE_ALL_ORDERS'\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAILED = 'AUTH_FAILED' ","import * as orderActions from './actionTypes'\r\nimport axios from '../../axios'\r\n\r\nexport const orderBurgerStart = (id, orderData) => {\r\n    return {\r\n        type: orderActions.BURGER_ORDER_START,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const orderBurgerFailed = (error) => {\r\n    return {\r\n        type: orderActions.BURGER_ORDER_FAILED,\r\n        error: error\r\n    }\r\n}\r\nexport const orderBurgerSuccess = () => {\r\n    return {\r\n        type: orderActions.BURGER_ORDER_SUCCESS\r\n    }\r\n}\r\n\r\nexport const orderRedirect = () => {\r\n    return {\r\n        type: orderActions.ORDER_REDIRECT\r\n    }\r\n}\r\n\r\nexport const initBurgerStart = (data) => {\r\n    return dispatch => {\r\n        dispatch(orderBurgerSuccess())\r\n        axios\r\n            .post(\"/orders.json\", data)\r\n            .then(response => {\r\n                dispatch(orderBurgerStart(response.data.name, data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(orderBurgerFailed(error))\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchedOrderStart = () => {\r\n\r\n    return {\r\n        type: orderActions.FETCHED_ORDERS_START\r\n    }\r\n\r\n}\r\n\r\nexport const fetchedOrdersFailed = err => {\r\n    return {\r\n        type: orderActions.FETCHED_ORDERS_FAILED,\r\n        err: err\r\n    }\r\n}\r\n\r\nexport const fetchedOrderDelete = (id) => {\r\n    return {\r\n        type: orderActions.FETCHED_ORDERS_DELETE,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const deleteAllOrders = () => {\r\n    return {\r\n        type: orderActions.DELELTE_ALL_ORDERS\r\n    }\r\n}\r\n\r\nexport const fetchedOrderSuccess = (order) => {\r\n    return {\r\n        type: orderActions.FETCHED_ORDERS_SUCCESS,\r\n        orders: order\r\n    }\r\n}\r\n\r\nexport const fetchedOrdersInit = () => {\r\n    return dispatch => {\r\n        dispatch(fetchedOrderStart())\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = []\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchedOrderSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchedOrdersFailed(err))\r\n            })\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport Burger from '../Burger/Burger'\r\nimport Button from '../Modal/Button'\r\n\r\nconst CheckoutSummary = (props) => {\r\n\r\n    return(\r\n    <div className = 'CheckoutSummary'>\r\n        <h3>Welcome to the Checkout Summary</h3>\r\n        <h4>This is the total price: ${parseFloat(props.price).toFixed(2)}</h4>\r\n        <div>\r\n            <Burger\r\n                ingredients = {props.ingredient}\r\n            />\r\n        </div>\r\n        <Button btnType = 'Danger' clicked = {props.cancelCheckout}>cancel</Button>\r\n        <Button btnType = 'Success' clicked = {props.continued}>checkout</Button>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CheckoutSummary;","import React from 'react'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null\r\n    let validateClass = []\r\n    if ((!props.validate) && props.isTouched) {\r\n        validateClass.push('notValid')\r\n    }\r\n\r\n    switch (props.inputtype) {\r\n        case 'input':\r\n            inputElement = <input {...props.config}\r\n                className={validateClass}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n            />\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <textarea {...props.config}\r\n                className={validateClass}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n            />\r\n            break;\r\n        case 'select':\r\n            inputElement = <select value={props.value} onChange={props.changed}>\r\n                {props.config.options.map(option => (\r\n                    <option value={option.value} key={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input {...props.config} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className='label'>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Button from '../components/Modal/Button'\r\nimport axios from '../axios'\r\nimport Spinner from '../components/Layout/spinner'\r\nimport Input from '../components/Layout/Input'\r\nimport withErrorHandler from '../components/hoc/withErrorHandler'\r\nimport * as orderAction from '../store/actions/burgerIndex'\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        isTouched: false\r\n      },\r\n      zipcode: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'text',\r\n          placeholder: 'Zip Code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 6\r\n        },\r\n        valid: false,\r\n        isTouched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'textarea',\r\n          placeholder: 'Your Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        isTouched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'text',\r\n          placeholder: 'Your Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        isTouched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        config: {\r\n          type: 'email',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        isTouched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        config: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'normal', displayValue: 'Normal' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' },\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {}\r\n      }\r\n    },\r\n    loading: false\r\n  }\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n    return isValid\r\n  }\r\n\r\n\r\n  nameHandler = (e, id) => {\r\n    const updatedOrderForm = { ...this.state.orderForm }\r\n    const updatedKeys = { ...updatedOrderForm[id] }\r\n    updatedKeys.value = e.target.value\r\n    updatedKeys.valid = this.checkValidity(updatedKeys.value, updatedKeys.validation)\r\n    updatedKeys.isTouched = true\r\n    updatedOrderForm[id] = updatedKeys\r\n\r\n    this.setState({\r\n      orderForm: updatedOrderForm\r\n    })\r\n  }\r\n\r\n\r\n  orderedBurger = (e) => {\r\n    e.preventDefault()\r\n    let orderData = {}\r\n    for (let formValue in this.state.orderForm) {\r\n      orderData[formValue] = this.state.orderForm[formValue].value\r\n    }\r\n    const data = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      contactform: orderData\r\n    };\r\n    this.props.onInitBurgerStart(data)\r\n\r\n  }\r\n\r\n  buttonProps = () => {\r\n    let buttonProps = 'disAbled'\r\n    let disabledArr = []\r\n    let buttonKeys = { ...this.state.orderForm }\r\n    for (let ifValid in buttonKeys) {\r\n      if (buttonKeys[ifValid].valid === true) {\r\n        disabledArr.push(ifValid)\r\n      }\r\n      if (disabledArr.length === 5) {\r\n        buttonProps = 'Success'\r\n      }\r\n    }\r\n    return buttonProps\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let elementTypeArr = []\r\n    for (let key in this.state.orderForm) {\r\n      elementTypeArr.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      })\r\n    }\r\n    let form = ''\r\n    if (this.props.loading) {\r\n      form = <Spinner />\r\n    }\r\n    else {\r\n      form = <form className='contactForm'>\r\n        {elementTypeArr.map(elementType => {\r\n          return <Input\r\n            isTouched={elementType.config.isTouched}\r\n            validate={elementType.config.valid}\r\n            key={elementType.id}\r\n            config={elementType.config.config}\r\n            inputtype={elementType.config.elementType}\r\n            value={elementType.config.value}\r\n            changed={(e) => this.nameHandler(e, elementType.id)}\r\n          />\r\n\r\n        })}\r\n        <Button\r\n          btnType={this.buttonProps()}\r\n          clicked={this.orderedBurger}>ORDER NOW</Button>\r\n      </form>\r\n    }\r\n\r\n    return (\r\n      <div className='contactData'>\r\n        <h3>Please enter your details below</h3>\r\n        {form}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burger.ingredients,\r\n    totalPrice: state.burger.totalPrice,\r\n    loading: state.order.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitBurgerStart: (data) => dispatch(orderAction.initBurgerStart(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport CheckoutSummary from '../components/Layout/CheckoutSummary'\r\nimport ContactData from './ContactData'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nclass Checkout extends Component {\r\n\r\n    cancelCheckout = () => {\r\n        this.props.history.goBack()\r\n    }\r\n    continued = () => {\r\n        this.props.history.replace('/Checkout/checkout-data')\r\n    }\r\n    render() {\r\n        let Summary = <Redirect to='/' />\r\n\r\n        if (this.props.ingredients) {\r\n            const orderRedirect = this.props.purchased ? <Redirect to='/' /> : null\r\n            Summary = (\r\n                <div>\r\n                    {orderRedirect}\r\n                    <CheckoutSummary\r\n                        cancelCheckout={this.cancelCheckout}\r\n                        continued={this.continued}\r\n                        ingredient={this.props.ingredients}\r\n                        price={this.props.totalPrice}\r\n                    />\r\n\r\n                    <Route path={this.props.match.url + '/checkout-data'} component={ContactData} />\r\n                </div>\r\n            )\r\n        }\r\n        return Summary\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burger.ingredients,\r\n        totalPrice: state.burger.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from 'react'\r\n\r\nconst Order = (props) => {\r\n    let ingredients = []\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    const ingredientArr = ingredients.map((ig, i) => {\r\n        return <span key={i} className='orderArr'>{ig.name} ({ig.amount})</span>\r\n    })\r\n    let style = {\r\n        fontWeight: '400'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='order'>\r\n                <button onClick={props.clicked} className='deleteOrder'>X</button>\r\n                <h3 style={style}>Ingredients: {ingredientArr}</h3>\r\n                <h3 style={style}> Price: <span style={{ fontWeight: '700' }}>USD {parseFloat(props.price).toFixed(2)}</span> </h3>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react'\r\nimport Order from '../components/Layout/Order'\r\nimport axios from '../axios'\r\nimport withErrorHandler from '../components/hoc/withErrorHandler'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/burgerIndex'\r\nimport Spinner from '../components/Layout/spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onInitFetchedOrders()\r\n    }\r\n\r\n    render() {\r\n        let button = ''\r\n        let spinner = <div style={{ textAlign: \"center\" }}><Spinner /></div>\r\n        if (!this.props.loading) {\r\n            button = <button className='deleteAllBtn' onClick={() => this.props.onDeleteAllOrders()}>Clear All</button>\r\n            spinner = this.props.order.map(order => {\r\n                return <Order\r\n                    clicked={() => this.props.onDeleteOrder(order.id)}\r\n                    price={order.price}\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                />\r\n\r\n            })\r\n        }\r\n        return <div> {button} {spinner}</div>\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.order.loading,\r\n        order: state.order.order\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitFetchedOrders: () => dispatch(actions.fetchedOrdersInit()),\r\n        onDeleteOrder: (id) => dispatch(actions.fetchedOrderDelete(id)),\r\n        onDeleteAllOrders: () => dispatch(actions.deleteAllOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react'\r\nimport Button from '../components/Modal/Button'\r\nimport Input from '../components/Layout/Input'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/burgerIndex'\r\nimport Spinner from '../components/Layout/spinner'\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        control: {\r\n            email: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Username'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'password',\r\n                    placeholder: 'password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            }\r\n        },\r\n        regControl: {\r\n            name: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n            zipcode: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 6\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'textarea',\r\n                    placeholder: 'Your Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                config: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isTouched: false\r\n            },\r\n        },\r\n        isLogin: true,\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n    nameHandler = (e, id) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.control,\r\n            [id]: {\r\n                ...this.state.control[id],\r\n                value: e.target.value,\r\n                valid: this.checkValidity(e.target.value, this.state.control[id].validation),\r\n                isTouched: true,\r\n\r\n            },\r\n        }\r\n        this.setState({\r\n            control: updatedOrderForm\r\n        })\r\n\r\n    }\r\n    loginButton = (e) => {\r\n        e.preventDefault()\r\n        this.props.onInitAuth(this.state.control.email.value, this.state.control.email.value, this.state.isLogin)\r\n    }\r\n\r\n\r\n    buttonProps = () => {\r\n        let buttonProps = 'disAbled loginButton'\r\n        let disabledArr = []\r\n        let buttonKeys = { ...this.state.control }\r\n        for (let ifValid in buttonKeys) {\r\n            if (buttonKeys[ifValid].valid === true) {\r\n                disabledArr.push(ifValid)\r\n            }\r\n            if (disabledArr.length === 2) {\r\n                buttonProps = 'Success loginButton'\r\n            }\r\n        }\r\n        return buttonProps\r\n    }\r\n    toggleLogin = () => {\r\n        console.log(this.state.isLogin)\r\n        // if (!this.state.isLogin) {\r\n        //     pathName = '/Auth/register'\r\n        // }\r\n        // else if (this.state.isLogin) {\r\n        //     pathName = '/Auth/login'\r\n        // }\r\n        this.setState(prevState => {\r\n            this.props.history.push(!prevState.isLogin ? '/Auth/login' : '/Auth/register')\r\n            return {\r\n                isLogin: !prevState.isLogin,\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        let elementTypeArr = []\r\n        for (let key in this.state.control) {\r\n            elementTypeArr.push({\r\n                id: key,\r\n                config: this.state.control[key]\r\n            })\r\n        }\r\n        let form = <div className='contactForm'>\r\n            {elementTypeArr.map(elementType => {\r\n                return <Input\r\n                    isTouched={elementType.config.isTouched}\r\n                    validate={elementType.config.valid}\r\n                    key={elementType.id}\r\n                    config={elementType.config.config}\r\n                    inputtype={elementType.config.elementType}\r\n                    value={elementType.config.value}\r\n                    changed={(e) => this.nameHandler(e, elementType.id)}\r\n                />\r\n\r\n            })}\r\n        </div>\r\n        let spinner;\r\n        if (this.props.loading) {\r\n            spinner = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <div className='loginForm'>\r\n                <form onSubmit={this.loginButton}>\r\n                    {form}\r\n                    <Button\r\n                        btnType={this.buttonProps()}>submit\r\n                    </Button>\r\n                </form>\r\n                <Button clicked={this.toggleLogin}> switch to {this.state.isLogin ? 'SignUp' : 'Login'}</Button>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {spinner}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitAuth: (email, password, isLogin) => dispatch(actions.initAuth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import * as actions from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (auth) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const initAuth = (email, password, isLogin) => {\r\n    const info = {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true\r\n    }\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        let url = 'https://cors-anywhere.herokuapp.com/https:dentitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkxoSmDMAvGH5Uyd2XQuk6ghxHOTjhSB4'\r\n        if (!isLogin) {\r\n            url = 'https://cors-anywhere.herokuapp.com/https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkxoSmDMAvGH5Uyd2XQuk6ghxHOTjhSB4'\r\n        }\r\n        console.log(url)\r\n        axios.post(url, info)\r\n            .then(res => {\r\n                console.log(res)\r\n                dispatch(authSuccess(res.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(authFailed(err))\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\nimport '../App.scss'\nimport Layout from \"../components/Layout/Layout\"\nimport Aux from \"../components/hoc/HigherOrder\"\nimport BurgerBuilder from './BurgerBuilder'\nimport { Route, Switch } from 'react-router-dom'\nimport Checkout from '../containers/Checkout'\nimport Orders from './Orders'\nimport Auth from '../containers/Auth'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Aux>\n        <Layout>\n          <Switch>\n            <Route path='/Checkout' component={Checkout} />\n            <Route path='/Orders' component={Orders} />\n            <Route path='/' exact component={BurgerBuilder} />\n            <Route path='/Auth/login' component={Auth} />\n            <Route path='/Auth/register' component={Auth} />\n          </Switch>\n        </Layout>\n      </Aux>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.8,\r\n    bacon: 1.7,\r\n    cheese: 2.3,\r\n    meat: 1\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: false,\r\n                totalPrice: 4\r\n            }\r\n        case actionTypes.LOAD_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import * as orderActions from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    order: [],\r\n    loading: false,\r\n    purchased: false,\r\n    error: false\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case orderActions.BURGER_ORDER_START:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            console.log(newOrder.id)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                order: state.order.concat(newOrder),\r\n                purchased: true\r\n            }\r\n        case orderActions.BURGER_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n\r\n            }\r\n        case orderActions.BURGER_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case orderActions.ORDER_REDIRECT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case orderActions.FETCHED_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case orderActions.FETCHED_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                order: action.orders.reverse()\r\n            }\r\n        case orderActions.FETCHED_ORDERS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case orderActions.FETCHED_ORDERS_DELETE:\r\n            const orders = [...state.order]\r\n            const updateOrders = orders.filter(order => order.id !== action.id)\r\n            return {\r\n                ...state,\r\n                order: updateOrders\r\n            }\r\n        case orderActions.DELELTE_ALL_ORDERS:\r\n            return {\r\n                ...state,\r\n                order: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default orderReducer","const update = (state, action) => {\n    return {\n        ...state,\n        ...action\n    }\n}\n\nexport default update;\n\n","import * as actionTypes from '../actions/actionTypes'\nimport update from '../utility'\n\nconst initialState = {\n    error: null,\n    loading: false,\n    tokenId: null,\n    userId: null\n}\n\nconst authState = (state, action) => {\n    return update(state, {\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return update(state, {\n        ...action,\n        loading: false,\n        tokenId: action.tokenId,\n        userId: action.userId\n    })\n}\n\nconst authFailed = (state, action) => {\n    return update(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authState(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAILED: return authFailed(state, action);\n        default: return state\n\n    }\n}\n\nexport default auth\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport burgerBuilder from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\n\nconst rootReducer = {\n    order: orderReducer,\n    burger: burgerBuilder,\n    auth: authReducer\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(combineReducers(rootReducer), composeEnhancers(applyMiddleware(thunk)\n))\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}